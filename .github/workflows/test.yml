name: PostgreSQL Service Example
on: push

jobs:
  runner-job:
    runs-on: ubuntu-latest

    services:
      postgres-sso:
        image: postgres:14.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
          POSTGRES_DB: keycloak_db
        # volumes:
        #   - keycloak-db.sql:/docker-entrypoint-initdb.d/keycloak-db.sql
        ports:
          - 5432:5432

      keycloak:
        image: quay.io/keycloak/keycloak:latest
        env:
          KC_DB: postgres
          KC_DB_USERNAME: postgres
          KC_DB_PASSWORD: example
          KC_DB_SCHEMA: public
          KC_DB_URL_DATABASE: keycloak_db
          KC_DB_URL_HOST: postgres-sso
          KEYCLOAK_ADMIN: admin
          KEYCLOAK_ADMIN_PASSWORD: admin
        ports:
          - 127.0.0.1:8080:8080

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html

      # - name: Test Keycloak service
      #   run: curl http://localhost:8080/auth

      # - name: Install dependencies
      #   run: npm ci

      # - name: Connect to PostgreSQL
      #   # Runs a script that creates a PostgreSQL table, populates
      #   # the table with data, and then retrieves the data
      #   run: node client.js
      #   # Environment variables used by the `client.js` script to create
      #   # a new PostgreSQL table.
      #   env:
      #     # The hostname used to communicate with the PostgreSQL service container
      #     POSTGRES_HOST: localhost
      #     # The default PostgreSQL port
      #     POSTGRES_PORT: 5432
      #     POSTGRES_SSO_POST: 5435
      #     KEYCLOAK_PORT: 8080
      #     CPG_SERVER: 8201

      - name: Test Keycloak service
        run: netstat -ln | grep 8080
      - name: A
        run: sudo netstat -tulpn
      - name: B
        run: curl -v http://127.0.0.1:8080/
